openapi: 3.0.1
info:
  title: Order Service
  description: Order CRUD API.
  version: 1.0.0
servers:
  - url: /v2
paths:
  /customer:
    get:
      summary: Get customers
      operationId: getCustomers
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    post:
      summary: Create a customer
      operationId: createCustomer
      requestBody:
        $ref: '#/components/requestBodies/SaveCustomerRequest'
      responses:
        200:
          description: Successful response
    put:
      summary: Update customer
      operationId: updateCustomer
      requestBody:
        $ref: '#/components/requestBodies/SaveCustomerRequest'
      responses:
        200:
          description: Successful response
  /customer/{customerId}:
    get:
      summary: Get customer by id
      operationId: getCustomer
      parameters:
        - $ref: '#/components/parameters/customerId'
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
    delete:
      summary: Delete customer by id
      operationId: deleteCustomer
      parameters:
        - $ref: '#/components/parameters/customerId'
      responses:
        200:
          description: Successful response
  /customer/contact:
    put:
      summary: Update contact
      operationId: updateContact
      requestBody:
        $ref: '#/components/requestBodies/SaveContactRequest'
      responses:
        200:
          description: Successful response
    post:
      summary: Create a contact
      operationId: createContact
      requestBody:
        $ref: '#/components/requestBodies/SaveContactRequest'
      responses:
        200:
          description: Successful response
  /customer/{customerId}/contact:
    get:
      summary: Get contacts of the customer
      operationId: getContacts
      parameters:
        - $ref: '#/components/parameters/customerId'
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
  /customer/contact/{contactId}:
    get:
      summary: Get contact by id
      operationId: getContact
      parameters:
        - $ref: '#/components/parameters/contactId'
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
    delete:
      summary: Delete contact by id
      operationId: deleteContact
      parameters:
        - $ref: '#/components/parameters/contactId'
      responses:
        200:
          description: Successful response
  /product:
    get:
      summary: Get products
      operationId: getProducts
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      summary: Create a product
      operationId: createProduct
      requestBody:
        $ref: '#/components/requestBodies/SaveProductRequest'
      responses:
        200:
          description: Successful response
    put:
      summary: Update product
      operationId: updateProduct
      requestBody:
        $ref: '#/components/requestBodies/SaveProductRequest'
      responses:
        200:
          description: Successful response
  /product/{productId}:
    get:
      summary: Get product by id
      operationId: getProduct
      parameters:
        - $ref: '#/components/parameters/productId'
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    delete:
      summary: Delete product by id
      operationId: deleteProduct
      parameters:
        - $ref: '#/components/parameters/productId'
      responses:
        200:
          description: Successful response
  /customer/order:
    put:
      summary: Update order
      operationId: updateOrder
      requestBody:
        $ref: '#/components/requestBodies/SaveOrderRequest'
      responses:
        200:
          description: Successful response
    post:
      summary: Create an order
      operationId: createOrder
      requestBody:
        $ref: '#/components/requestBodies/SaveOrderRequest'
      responses:
        200:
          description: Successful response
  /customer/{customerId}/order:
    get:
      summary: Get orders of the customer
      operationId: getOrders
      parameters:
        - $ref: '#/components/parameters/customerId'
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
  /customer/order/{orderId}:
    get:
      summary: Get order by id
      operationId: getOrder
      parameters:
        - $ref: '#/components/parameters/orderId'
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
    delete:
      summary: Delete order by id
      operationId: deleteOrder
      parameters:
        - $ref: '#/components/parameters/orderId'
      responses:
        200:
          description: Successful response
  /authenticate:
    post:
      summary: Authenticate API users
      operationId: authenticate
      requestBody:
        description: Authentication request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JwtRequest'
      responses:
        200:
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtResponse'
components:
  parameters:
    customerId:
      in: path
      name: customerId
      schema:
        type: number
      required: true
      description: Numeric ID of the customer to get
    contactId:
      in: path
      name: contactId
      schema:
        type: number
      required: true
      description: Numeric ID of the contact to get
    productId:
      in: path
      name: productId
      schema:
        type: number
      required: true
      description: Numeric ID of the product to get
    orderId:
      in: path
      name: orderId
      schema:
        type: number
      required: true
      description: Numeric ID of the order to get
  requestBodies:
    SaveCustomerRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customer'
    SaveContactRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Contact'
    SaveProductRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Product'
    SaveOrderRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Order'
    JwtRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JwtRequest'
  responses:
    JwtResponse:
      $ref: '#/components/schemas/JwtResponse'
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Sanderson
        email:
          type: string
          example: jsanderson@gmail.com
    Contact:
      type: object
      properties:
        id:
          type: integer
          format: int64
        customer:
          $ref: '#/components/schemas/Customer'
        phoneNumber:
          type: string
          example: +35699720374
        address:
          type: string
          example: 443 Trig D'Argens
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
        productType:
          type: string
          enum: [ "Internet", "TV", "Telephony", "Mobile" ]
        productPackage:
          type: string
          example: 250Mbit
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        product:
          $ref: '#/components/schemas/Product'
        contact:
          $ref: '#/components/schemas/Contact'
    CreateCustomerRequest:
      $ref: '#/components/schemas/Customer'
    JwtRequest:
      type: object
      properties:
        username:
          type: string
          example: j.sanderson
        password:
          type: string
          example: g6dpq38kY7ENmdnqBrRHssy
    JwtResponse:
      type: object
      properties:
        jwtToken:
          type: string
          example: 5ktH96mqT3ZERwyyhWZtQ5V